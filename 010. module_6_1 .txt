class  Animal:
    def __init__(self, name):
        self.alive = True       #(живой)
        self.fed = False        #(накормленный)
        self.name = name

    def eat(self, food):
        if food.edible == True: #Если переданное растение (food) съедобное
            print(f"{self.name} съел {food.name}")
            self.fed = True  ##(накормленность)
        else:
            print(f"{self.name} не стал есть {food.name}")
            self.alive = False     # стал мёртвым от голода


class Plant:
    def __init__(self, name):
        self.edible = False             #(съедобность)
        self.name = name




class Mammal(Animal):
    pass


class Predator(Animal):
    pass


class Flower(Plant):
    pass

class Fruit(Plant):
    def __init__(self, name): # До этого дойти было трудно. Наверное, как-то по-другом предполагалось решить проблему переопределения.
        super().__init__(name)  # Вызов инициализатора родительского класса
        self.edible = True   #съедобность


a1 = Predator('Волк с Уолл-Стрит')

a2 = Mammal('Хатико')

p1 = Flower('Цветик семицветик')

p2 = Fruit('Заводной апельсин')



print(a1.name)

print(p1.name)



print(a1.alive)

print(a2.fed)

a1.eat(p1)

a2.eat(p2)

print(a1.alive)

print(a2.fed)

